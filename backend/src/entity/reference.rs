//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "reference")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub cardinality: Option<String>,
    #[sea_orm(column_name = "deleteConstraint")]
    pub delete_constraint: Option<String>,
    #[sea_orm(column_name = "endFieldId")]
    pub end_field_id: Option<String>,
    #[sea_orm(column_name = "endTableId")]
    pub end_table_id: Option<String>,
    pub name: Option<String>,
    #[sea_orm(column_name = "startFieldId")]
    pub start_field_id: Option<String>,
    #[sea_orm(column_name = "startTableId")]
    pub start_table_id: Option<String>,
    #[sea_orm(column_name = "updateConstraint")]
    pub update_constraint: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
