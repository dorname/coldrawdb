//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use crate::entity::prelude::{IndiceLink, TableLink};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "field")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "custom(\"NUMERIC\")"
    )]
    pub id: String,
    pub check: Option<String>,
    pub comment: Option<String>,
    pub default: Option<String>,
    pub increment: Option<bool>,
    pub not_null: Option<bool>,
    pub primary: Option<bool>,
    pub size: Option<i32>,
    pub r#type: Option<String>,
    pub unique: Option<bool>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "TableLink")]
    TableLink,

    #[sea_orm(has_many= "IndiceLink")]
    IndiceLink
}

impl Related<TableLink> for Entity {
    fn to() -> RelationDef {
        Relation::TableLink.def()
    }
}

impl Related<IndiceLink> for Entity {
    fn to() -> RelationDef {
        Relation::IndiceLink.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
