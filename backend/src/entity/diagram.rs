//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use crate::entity::{diagram_link, prelude::*};
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "diagram")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<Task> for Entity {
    /// diagram_link -> task
    fn to() -> RelationDef {
        diagram_link::Relation::Task.def()
    }
    /// diagram -> diagram_link
    fn via() -> Option<RelationDef> {
        Some(diagram_link::Relation::Diagram.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
